{"version":3,"file":"static/js/52.26e0b730.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesGallery/MoviesGallery.module.css?276e","components/MoviesGallery/MoviesGallery.jsx","services/api.jsx","views/Home.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MoviesGallery\":\"MoviesGallery_MoviesGallery__tqAIU\",\"MoviesItem\":\"MoviesGallery_MoviesItem__fMKZ7\",\"MoviesItem_img\":\"MoviesGallery_MoviesItem_img__B2hsB\",\"MoviesItem_text\":\"MoviesGallery_MoviesItem_text__9W2SB\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from '../../services/api';\nimport style from './MoviesGallery.module.css'\n\nconst MoviesGallery = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul className={style.MoviesGallery}>\n            {movies.map(movie => (\n                <li key={movie.id} className={style.MoviesItem}>\n                \n                    <Link to={{\n                        pathname: `/movies/${movie.id}`,\n                        state: {from: location},\n                    }}>\n\n                        <img src={IMAGE_URL + movie.poster_path} alt={movie.title} className={style.MoviesItem_img} width={400}/>\n                        <p className={style.MoviesItem_text}>{movie.title}</p>\n                </Link>\n            </li>\n            ))}\n        </ul>\n    );\n};\n\nexport default MoviesGallery;","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = '2c3efb2d795661188f5f8e1565ebf9ff';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500'\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not fond'));\n}\n\nexport function fetchTrendingMovies() {\n    return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${KEY}`);\n}\n\nexport function fetchMoviesId(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`);\n}\n\nexport function fetchMovieSearch(query) {\n    return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`);\n}\n\nexport function fetchMovieCast(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n}\n\nexport function fetchMovieReviews(movieId) {\n    return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US`);\n}\n\n\n// // api.js\n// import axios from 'axios';\n\n// const API_KEY = '2c3efb2d795661188f5f8e1565ebf9ff';\n// const api = axios.create({\n//   baseURL: 'https://api.themoviedb.org/3',\n//   params: {\n//     api_key: API_KEY,\n//   },\n// });\n\n// export const fetchTrendingMovies = async () => {\n//   try {\n//     const response = await api.get('/trending/movie/week');\n//     return response.data.results;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// export const fetchMovieCast = async (movieId) => {\n//   try {\n//     const response = await api.get(`/movie/${movieId}/credits`);\n//     return response.data.cast;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// export const fetchMovieDetails = async (movieId) => {\n//   try {\n//     const response = await api.get(`/movie/${movieId}`);\n//     return response.data;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// export const searchMovies = async (query) => {\n//   try {\n//     const response = await api.get('/search/movie', { params: { query } });\n//     return response.data.results;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n\n// export const fetchMovieReviews = async (movieId) => {\n//   try {\n//     const response = await api.get(`/movie/${movieId}/reviews`);\n//     return response.data.results;\n//   } catch (error) {\n//     throw error;\n//   }\n// };\n","import { useState, useEffect } from 'react';\nimport MoviesGallery from '../components/MoviesGallery/MoviesGallery';\nimport { fetchTrendingMovies } from '../services/api';\n// import { GlobalStyle } from '../components/GlobalStyle';\n\nexport default function HomePage() {\n    const [movies, setMovies] = useState([]);\n    \n    useEffect(() => {\n        fetchTrendingMovies()\n            .then(request => setMovies(request.results)\n            );\n    }, [])\n\n    // console.log(movies);\n    return (\n        <>\n            <h1>Trending today</h1>\n\n            <MoviesGallery movies={movies} />\n        </>\n    );\n};\n\n\n// // Home.js\n// import React, { useState, useEffect } from 'react';\n// import { fetchTrendingMovies } from 'services/api';\n// import { Link, useLocation } from 'react-router-dom';\n// // import { MovieDetails } from '../MovieDetails/MovieDetails';\n\n// function Home() {\n//   const [trendingMovies, setTrendingMovies] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const location = useLocation();\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const movies = await fetchTrendingMovies();\n//         setTrendingMovies(movies);\n//         setIsLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching trending movies:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Popular Movies</h1>\n//       {isLoading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <ul>\n//           {trendingMovies.map((movie) => (\n//             <li key={movie.id}>\n//               <Link to={`/movies/${movie.id}`} state={{ from: location }}>{movie.title}</Link>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n// {/* \n//       <Routes>\n//         <Routes>\n//           <Route path=\"/movies/:id\" element={<MovieDetails />} />\n//         </Routes>\n//       </Routes> */}\n\n//     </div>\n//   );\n// }\n\n// export default Home\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["_ref","movies","location","useLocation","_jsx","className","style","children","map","movie","_jsxs","Link","to","pathname","concat","id","state","from","src","IMAGE_URL","poster_path","alt","title","width","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","BASE_URL","KEY","fetchWithErrorHandling","_fetchWithErrorHandling","apply","arguments","_asyncToGenerator","_callee","url","config","response","_args","_context","undefined","fetch","ok","json","t0","reject","fetchTrendingMovies","fetchMoviesId","movieId","fetchMovieSearch","query","fetchMovieCast","fetchMovieReviews","HomePage","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","request","results","_Fragment","MoviesGallery","asyncGeneratorStep","gen","_next","_throw","key","info","error","fn","self","this","args","err"],"sourceRoot":""}