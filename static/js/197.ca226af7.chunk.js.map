{"version":3,"file":"static/js/197.ca226af7.chunk.js","mappings":"2NAGe,SAASA,EAAIC,GAAe,IAAZC,EAAOD,EAAPC,QAC3BC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAMpB,OAJAI,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeR,GAASS,MAAK,SAAAC,GAAO,OAAIJ,EAAQI,EAAQL,KAAK,GACjE,GAAG,CAACL,KAGAW,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMC,SACfR,EAAKS,KAAI,SAAAC,GAAE,OACRC,EAAAA,EAAAA,MAAA,MAAgBJ,UAAU,WAAUC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OAAKM,IAAKC,EAAAA,GAAYH,EAAGI,aAAcC,IAAKL,EAAGM,KAAMT,UAAU,kBAC/DD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gBAAeC,SAAEE,EAAGM,SAF5BN,EAAGO,GAGP,KAIrB,C","sources":["views/Cast/Cast.jsx"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { fetchMovieCast, IMAGE_URL } from '../../services/api';\n\nexport default function Cast({ movieId }) {\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        fetchMovieCast(movieId).then(request => setCast(request.cast));\n    }, [movieId]);\n\n    return (\n        <ul className=\"Cast\">\n            {cast.map(el => (\n                <li key={el.id} className=\"CastItem\">\n                    <img src={IMAGE_URL + el.profile_path} alt={el.name} className=\"CastItem_img\" />\n                    <p className=\"CastItem_text\">{el.name}</p>\n                </li>\n            ))}\n        </ul>\n    )\n}\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import { fetchMovieCast } from 'services/api';\n// import { useParams } from 'react-router-dom'; // Додали імпорт useParams\n// import { CastList, CastItem, CastImg} from '../components/Cast/CastStyled.styled'\n// function Cast() {\n//   const [cast, setCast] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const { id } = useParams(); // Використовуємо useParams для отримання id з роутера\n//   const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const castData = await fetchMovieCast(id);\n//         setCast(castData);\n//         setIsLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching cast:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [id]); // Включаємо id в список залежностей useEffect\n\n//   return (\n//     <div>\n//       <h1>Cast</h1>\n//       {isLoading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <CastList>\n//           {cast.map((actor) => (\n//             <CastItem key={actor.id}>\n//               <CastImg src={IMAGE_URL + actor.profile_path} alt={actor.name} />\n//               <span>{actor.name}</span>\n//             </CastItem>\n//           ))}\n//         </CastList>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Cast\n\n// // // Cast.js\n// // import React, { useState, useEffect, useParams } from 'react';\n// // import { fetchMovieCast } from 'services/api';\n\n// // export function Cast() {\n// //   const [cast, setCast] = useState([]);\n// //   const [isLoading, setIsLoading] = useState(true);\n// //   const { id } = useParams();\n\n// //   useEffect(() => {\n// //     const fetchData = async () => {\n// //       try {\n// //         const castData = await fetchMovieCast(id);\n// //         setCast(castData);\n// //         setIsLoading(false);\n// //       } catch (error) {\n// //         console.error('Error fetching cast:', error);\n// //       }\n// //     };\n\n// //     fetchData();\n// //   }, [id]);\n\n// //   return (\n// //     <div>\n// //       <h1>Cast</h1>\n// //       {isLoading ? (\n// //         <p>Loading...</p>\n// //       ) : (\n// //         <ul>\n// //           {cast.map((actor) => (\n// //             <li key={actor.id}>{actor.name}</li>\n// //           ))}\n// //         </ul>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n\n\n"],"names":["Cast","_ref","movieId","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchMovieCast","then","request","_jsx","className","children","map","el","_jsxs","src","IMAGE_URL","profile_path","alt","name","id"],"sourceRoot":""}