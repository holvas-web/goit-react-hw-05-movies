{"version":3,"file":"static/js/387.7434a233.chunk.js","mappings":"2NAGe,SAASA,EAAOC,GAAe,IAAZC,EAAOD,EAAPC,QAC9BC,GAA8BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAM1B,OAJAI,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBR,GAASS,MAAK,SAAAC,GAAO,OAAIJ,EAAWI,EAAQC,QAAQ,GAC1E,GAAG,CAACX,KAGAY,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACKT,EAAQU,OAAQ,GACbH,EAAAA,EAAAA,KAAA,MAAAE,SACKT,EAAQW,KAAI,SAAAC,GAAE,OAEVC,EAAAA,EAAAA,MAAA,MAAAJ,SAAA,EACGI,EAAAA,EAAAA,MAAA,KAAAJ,SAAA,EAAGF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,aAAgBG,EAAGE,WAC5BP,EAAAA,EAAAA,KAAA,KAAAE,SAAIG,EAAGG,YAFDH,EAAGI,GAGR,OAGZT,EAAAA,EAAAA,KAAA,MAAAE,SAAI,gBAGrB,C","sources":["views/Reviews/Reviews.jsx"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { fetchMovieReviews } from '../../services/api';\n\nexport default function Reviews({ movieId }) {\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        fetchMovieReviews(movieId).then(request => setReviews(request.results));\n    }, [movieId]);\n\n    return (\n        <>\n            {reviews.length >0 ? (\n                <ul>\n                    {reviews.map(el=> \n                        // return console.log(el);\n                        (<li key={el.id}>\n                            <p><span>Author: </span>{el.author}</p>\n                            <p>{el.content}</p>\n                        </li>)\n                    )}\n                </ul>\n            ) : (<h2>No reviews</h2>)}\n        </>\n    )\n};\n\n\n\n// // Reviews.js\n// import React, { useState, useEffect } from 'react';\n// import { fetchMovieReviews } from 'services/api';\n// import { useParams } from 'react-router-dom';\n// import { Wrapper } from '../components/Reviews/Reviews.styled';\n\n\n// function Reviews() {\n//   const { id } = useParams();\n//   const [reviews, setReviews] = useState([]);\n//   const [isLoading, setIsLoading] = useState(true);\n  \n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const reviewData = await fetchMovieReviews(id);\n//         setReviews(reviewData);\n//         setIsLoading(false);\n//       } catch (error) {\n//         console.error('Error fetching reviews:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, [id]);\n\n//   return (\n//    <Wrapper>\n//       <h1>Reviews</h1>\n//       {isLoading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <ul>\n//           {reviews.map((review) => (\n//             <li key={review.id}>\n//               <h3>{review.author}</h3>\n//               <p>{review.content}</p>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </Wrapper>\n//   );\n// }\n\n// export default Reviews\n\n\n"],"names":["Reviews","_ref","movieId","_useState","useState","_useState2","_slicedToArray","reviews","setReviews","useEffect","fetchMovieReviews","then","request","results","_jsx","_Fragment","children","length","map","el","_jsxs","author","content","id"],"sourceRoot":""}